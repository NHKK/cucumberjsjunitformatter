"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var JunitTestCase = function () {
  function JunitTestCase(scenario) {
    _classCallCheck(this, JunitTestCase);

    this.testcase = scenario;
  }

  _createClass(JunitTestCase, [{
    key: "createJunitTestCase",
    value: function createJunitTestCase() {
      var cdataResult = this.createCdataAndGetTotalTime();
      var testcaseClassname = "",
          testcaseName = this.testcase.name,
          testcaseTime = cdataResult.time,
          createFailTag = cdataResult.hasFailStep,
          cdataString = cdataResult.cdata.join(" \n"),
          attributeObject = { _attr: { classname: testcaseClassname, name: testcaseName, time: testcaseTime } },
          innerObject;

      if (createFailTag) {
        innerObject = { failure: { _cdata: cdataString } };
      } else {
        innerObject = { "system-out": { _cdata: cdataString } };
      }

      return { testcase: [attributeObject, innerObject] };
    }
  }, {
    key: "createCdataAndGetTotalTime",
    value: function createCdataAndGetTotalTime() {
      var result = { time: 0, cdata: [], hasFailStep: false };
      this.testcase.steps.forEach(function (step) {
        result.time += step.result.duration;

        if (step.result.status === 'failed') {
          result.hasFailStep = true;
        }

        result.cdata.push(step.name);
      });
      return result;
    }
  }]);

  return JunitTestCase;
}();


// var scenario = {name: "tcname", failed:1, skipped:1, duration:1, steps:[
//   {name:"given", result:{status:"passed", duration:10}}, {name:"then", result:{status:"failed", duration:10}}
//   ]};
// var a = new JunitTestCase(scenario);
// a.createJunitTestCase();
